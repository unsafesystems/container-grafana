name: autotag

on:
  push:
    branches: [ main ]

jobs:
  autotag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
          token: ${{ secrets.PAT }}

      - name: Get previous tag
        id: fluentbit
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: fluentbit-v0.0.0 # Optional fallback tag to use when no tag can be found
          prefix: fluentbit-v # Optional prefix to strip from the tag
      - name: Read version from file
        run: |
          echo "previous_version=${{ steps.fluentbit.outputs.tag }}" >> "$GITHUB_ENV"
          CURRENT_VERSION=$(head -n 1 "fluentbit/Dockerfile" | grep "FROM" | cut -d ":" -f 2 | cut -d " " -f 1)
          echo "current_version=fluentbit-v${CURRENT_VERSION}" >> "$GITHUB_ENV"
      - name: Set new tag
        if: env.previous_version != env.current_version
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.PAT }}
          tag: ${{ env.current_version }}
          message: "Release ${{ env.current_version }}"

      - name: Get previous tag
        id: grafana
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: grafana-v0.0.0 # Optional fallback tag to use when no tag can be found
          prefix: grafana-v # Optional prefix to strip from the tag
      - name: Read version from file
        run: |
          echo "previous_version=${{ steps.grafana.outputs.tag }}" >> "$GITHUB_ENV"
          CURRENT_VERSION=$(head -n 1 "grafana/Dockerfile" | grep "FROM" | cut -d ":" -f 2 | cut -d " " -f 1)
          echo "current_version=grafana-v${CURRENT_VERSION}" >> "$GITHUB_ENV"
      - name: Set new tag
        if: env.previous_version != env.current_version
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.PAT }}
          tag: ${{ env.current_version }}
          message: "Release ${{ env.current_version }}"

      - name: Get previous tag
        id: loki
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: loki-v0.0.0 # Optional fallback tag to use when no tag can be found
          prefix: loki-v # Optional prefix to strip from the tag
      - name: Read version from file
        run: |
          echo "previous_version=${{ steps.loki.outputs.tag }}" >> "$GITHUB_ENV"
          CURRENT_VERSION=$(head -n 1 "loki/Dockerfile" | grep "FROM" | cut -d ":" -f 2 | cut -d " " -f 1)
          echo "current_version=loki-v${CURRENT_VERSION}" >> "$GITHUB_ENV"
      - name: Set new tag
        if: env.previous_version != env.current_version
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.PAT }}
          tag: ${{ env.current_version }}
          message: "Release ${{ env.current_version }}"

      - name: Get previous tag
        id: mimir
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: mimir-v0.0.0 # Optional fallback tag to use when no tag can be found
          prefix: mimir-v # Optional prefix to strip from the tag
      - name: Read version from file
        run: |
          echo "previous_version=${{ steps.mimir.outputs.tag }}" >> "$GITHUB_ENV"
          CURRENT_VERSION=$(head -n 1 "mimir/Dockerfile" | grep "FROM" | cut -d ":" -f 2 | cut -d " " -f 1)
          echo "current_version=mimir-v${CURRENT_VERSION}" >> "$GITHUB_ENV"
      - name: Set new tag
        if: env.previous_version != env.current_version
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.PAT }}
          tag: ${{ env.current_version }}
          message: "Release ${{ env.current_version }}"

      - name: Get previous tag
        id: tempo
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: tempo-v0.0.0 # Optional fallback tag to use when no tag can be found
          prefix: tempo-v # Optional prefix to strip from the tag
      - name: Read version from file
        run: |
          echo "previous_version=${{ steps.tempo.outputs.tag }}" >> "$GITHUB_ENV"
          CURRENT_VERSION=$(head -n 1 "tempo/Dockerfile" | grep "FROM" | cut -d ":" -f 2 | cut -d " " -f 1)
          echo "current_version=tempo-v${CURRENT_VERSION}" >> "$GITHUB_ENV"
      - name: Set new tag
        if: env.previous_version != env.current_version
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.PAT }}
          tag: ${{ env.current_version }}
          message: "Release ${{ env.current_version }}"

      - name: Get previous tag
        id: yace
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: yace-v0.0.0 # Optional fallback tag to use when no tag can be found
          prefix: yace-v # Optional prefix to strip from the tag
      - name: Read version from file
        run: |
          echo "previous_version=${{ steps.yace.outputs.tag }}" >> "$GITHUB_ENV"
          CURRENT_VERSION=$(head -n 1 "yace/Dockerfile" | grep "FROM" | cut -d ":" -f 2 | cut -d " " -f 1)
          echo "current_version=yace-${CURRENT_VERSION}" >> "$GITHUB_ENV"
      - name: Set new tag
        if: env.previous_version != env.current_version
        uses: rickstaa/action-create-tag@v1
        with:
          github_token: ${{ secrets.PAT }}
          tag: ${{ env.current_version }}
          message: "Release ${{ env.current_version }}"
